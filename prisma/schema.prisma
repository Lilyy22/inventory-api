// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model EmailTemplate {
  id          String   @id @default(uuid())
  name        String   @unique
  subject     String
  body        String
  footer      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PushNotification {
  id          String   @id @default(uuid())
  userId      String
  title       String
  body        String
  deviceToken String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id          String   @id @default(uuid())
  userId      String
  title       String
  body        String
  deviceToken String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  SALES
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?
  email    String  @unique
  role     Role    @default(USER)
  password String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  refreshTokens refreshTokens[]

  @@map("users")
}

model refreshTokens {
  user_id Int @id
  refresh_token String 
  
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt

  user   User  @relation(fields: [user_id], references: [id])
}